OpenLayers.Layer.Vector=OpenLayers.Class(OpenLayers.Layer,{isBaseLayer:false,isFixed:false,features:null,filter:null,selectedFeatures:null,unrenderedFeatures:null,reportError:true,style:null,styleMap:null,strategies:null,protocol:null,renderers:["SVG","VML","Canvas"],renderer:null,rendererOptions:null,geometryType:null,drawn:false,ratio:1,initialize:function(c,b){OpenLayers.Layer.prototype.initialize.apply(this,arguments);if(!this.renderer||!this.renderer.supported()){this.assignRenderer()}if(!this.renderer||!this.renderer.supported()){this.renderer=null;this.displayError()}if(!this.styleMap){this.styleMap=new OpenLayers.StyleMap()}this.features=[];this.selectedFeatures=[];this.unrenderedFeatures={};if(this.strategies){for(var d=0,a=this.strategies.length;d<a;d++){this.strategies[d].setLayer(this)}}},destroy:function(){if(this.strategies){var c,b,a;for(b=0,a=this.strategies.length;b<a;b++){c=this.strategies[b];if(c.autoDestroy){c.destroy()}}this.strategies=null}if(this.protocol){if(this.protocol.autoDestroy){this.protocol.destroy()}this.protocol=null}this.destroyFeatures();this.features=null;this.selectedFeatures=null;this.unrenderedFeatures=null;if(this.renderer){this.renderer.destroy()}this.renderer=null;this.geometryType=null;this.drawn=null;OpenLayers.Layer.prototype.destroy.apply(this,arguments)},clone:function(e){if(e==null){e=new OpenLayers.Layer.Vector(this.name,this.getOptions())}e=OpenLayers.Layer.prototype.clone.apply(this,[e]);var c=this.features;var a=c.length;var d=new Array(a);for(var b=0;b<a;++b){d[b]=c[b].clone()}e.features=d;return e},refresh:function(a){if(this.calculateInRange()&&this.visibility){this.events.triggerEvent("refresh",a)}},assignRenderer:function(){for(var c=0,a=this.renderers.length;c<a;c++){var b=this.renderers[c];var d=(typeof b=="function")?b:OpenLayers.Renderer[b];if(d&&d.prototype.supported()){this.renderer=new d(this.div,this.rendererOptions);break}}},displayError:function(){if(this.reportError){OpenLayers.Console.userError(OpenLayers.i18n("browserNotSupported",{renderers:this.renderers.join("\n")}))}},setMap:function(b){OpenLayers.Layer.prototype.setMap.apply(this,arguments);if(!this.renderer){this.map.removeLayer(this)}else{this.renderer.map=this.map;var a=this.map.getSize();a.w=a.w*this.ratio;a.h=a.h*this.ratio;this.renderer.setSize(a)}},afterAdd:function(){if(this.strategies){var c,b,a;for(b=0,a=this.strategies.length;b<a;b++){c=this.strategies[b];if(c.autoActivate){c.activate()}}}},removeMap:function(c){this.drawn=false;if(this.strategies){var d,b,a;for(b=0,a=this.strategies.length;b<a;b++){d=this.strategies[b];if(d.autoActivate){d.deactivate()}}}},onMapResize:function(){OpenLayers.Layer.prototype.onMapResize.apply(this,arguments);var a=this.map.getSize();a.w=a.w*this.ratio;a.h=a.h*this.ratio;this.renderer.setSize(a)},moveTo:function(a,b,l){OpenLayers.Layer.prototype.moveTo.apply(this,arguments);var c=true;if(!l){this.renderer.root.style.visibility="hidden";var k=this.map.getSize(),h=k.w,f=k.h,e=(h/2*this.ratio)-h/2,d=(f/2*this.ratio)-f/2;e+=this.map.layerContainerOriginPx.x;e=-Math.round(e);d+=this.map.layerContainerOriginPx.y;d=-Math.round(d);this.div.style.left=e+"px";this.div.style.top=d+"px";var m=this.map.getExtent().scale(this.ratio);c=this.renderer.setExtent(m,b);this.renderer.root.style.visibility="visible";if(OpenLayers.IS_GECKO===true){this.div.scrollLeft=this.div.scrollLeft}if(!b&&c){for(var g in this.unrenderedFeatures){var n=this.unrenderedFeatures[g];this.drawFeature(n)}}}if(!this.drawn||b||!c){this.drawn=true;var n;for(var g=0,j=this.features.length;g<j;g++){this.renderer.locked=(g!==(j-1));n=this.features[g];this.drawFeature(n)}}},display:function(a){OpenLayers.Layer.prototype.display.apply(this,arguments);var b=this.div.style.display;if(b!=this.renderer.root.style.display){this.renderer.root.style.display=b}},addFeatures:function(b,j){if(!(OpenLayers.Util.isArray(b))){b=[b]}var g=!j||!j.silent;if(g){var a={features:b};var f=this.events.triggerEvent("beforefeaturesadded",a);if(f===false){return}b=a.features}var d=[];for(var c=0,e=b.length;c<e;c++){if(c!=(b.length-1)){this.renderer.locked=true}else{this.renderer.locked=false}var h=b[c];if(this.geometryType&&!(h.geometry instanceof this.geometryType)){throw new TypeError("addFeatures: component should be an "+this.geometryType.prototype.CLASS_NAME)}h.layer=this;if(!h.style&&this.style){h.style=OpenLayers.Util.extend({},this.style)}if(g){if(this.events.triggerEvent("beforefeatureadded",{feature:h})===false){continue}this.preFeatureInsert(h)}d.push(h);this.features.push(h);this.drawFeature(h);if(g){this.events.triggerEvent("featureadded",{feature:h});this.onFeatureInsert(h)}}if(g){this.events.triggerEvent("featuresadded",{features:d})}},removeFeatures:function(e,a){if(!e||e.length===0){return}if(e===this.features){return this.removeAllFeatures(a)}if(!(OpenLayers.Util.isArray(e))){e=[e]}if(e===this.selectedFeatures){e=e.slice()}var d=!a||!a.silent;if(d){this.events.triggerEvent("beforefeaturesremoved",{features:e})}for(var c=e.length-1;c>=0;c--){if(c!=0&&e[c-1].geometry){this.renderer.locked=true}else{this.renderer.locked=false}var b=e[c];delete this.unrenderedFeatures[b.id];if(d){this.events.triggerEvent("beforefeatureremoved",{feature:b})}this.features=OpenLayers.Util.removeItem(this.features,b);b.layer=null;if(b.geometry){this.renderer.eraseFeatures(b)}if(OpenLayers.Util.indexOf(this.selectedFeatures,b)!=-1){OpenLayers.Util.removeItem(this.selectedFeatures,b)}if(d){this.events.triggerEvent("featureremoved",{feature:b})}}if(d){this.events.triggerEvent("featuresremoved",{features:e})}},removeAllFeatures:function(a){var d=!a||!a.silent;var e=this.features;if(d){this.events.triggerEvent("beforefeaturesremoved",{features:e})}var c;for(var b=e.length-1;b>=0;b--){c=e[b];if(d){this.events.triggerEvent("beforefeatureremoved",{feature:c})}c.layer=null;if(d){this.events.triggerEvent("featureremoved",{feature:c})}}this.renderer.clear();this.features=[];this.unrenderedFeatures={};this.selectedFeatures=[];if(d){this.events.triggerEvent("featuresremoved",{features:e})}},destroyFeatures:function(d,a){var c=(d==undefined);if(c){d=this.features}if(d){this.removeFeatures(d,a);for(var b=d.length-1;b>=0;b--){d[b].destroy()}}},drawFeature:function(a,b){if(!this.drawn){return}if(typeof b!="object"){if(!b&&a.state===OpenLayers.State.DELETE){b="delete"}var c=b||a.renderIntent;b=a.style||this.style;if(!b){b=this.styleMap.createSymbolizer(a,c)}}var d=this.renderer.drawFeature(a,b);if(d===false||d===null){this.unrenderedFeatures[a.id]=a}else{delete this.unrenderedFeatures[a.id]}},eraseFeatures:function(a){this.renderer.eraseFeatures(a)},getFeatureFromEvent:function(a){if(!this.renderer){throw new Error("getFeatureFromEvent called on layer with no renderer. This usually means you destroyed a layer, but not some handler which is associated with it.")}var b=null;var c=this.renderer.getFeatureIdFromEvent(a);if(c){if(typeof c==="string"){b=this.getFeatureById(c)}else{b=c}}return b},getFeatureBy:function(e,d){var c=null;for(var b=0,a=this.features.length;b<a;++b){if(this.features[b][e]==d){c=this.features[b];break}}return c},getFeatureById:function(a){return this.getFeatureBy("id",a)},getFeatureByFid:function(a){return this.getFeatureBy("fid",a)},getFeaturesByAttribute:function(d,e){var c,b,a=this.features.length,f=[];for(c=0;c<a;c++){b=this.features[c];if(b&&b.attributes){if(b.attributes[d]===e){f.push(b)}}}return f},onFeatureInsert:function(a){},preFeatureInsert:function(a){},getDataExtent:function(){var b=null;var d=this.features;if(d&&(d.length>0)){var e=null;for(var c=0,a=d.length;c<a;c++){e=d[c].geometry;if(e){if(b===null){b=new OpenLayers.Bounds()}b.extend(e.getBounds())}}}return b},CLASS_NAME:"OpenLayers.Layer.Vector"});