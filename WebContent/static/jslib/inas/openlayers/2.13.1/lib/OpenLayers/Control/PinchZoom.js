OpenLayers.Control.PinchZoom=OpenLayers.Class(OpenLayers.Control,{type:OpenLayers.Control.TYPE_TOOL,pinchOrigin:null,currentCenter:null,autoActivate:true,preserveCenter:false,initialize:function(a){OpenLayers.Control.prototype.initialize.apply(this,arguments);this.handler=new OpenLayers.Handler.Pinch(this,{start:this.pinchStart,move:this.pinchMove,done:this.pinchDone},this.handlerOptions)},pinchStart:function(a,c){var b=(this.preserveCenter)?this.map.getPixelFromLonLat(this.map.getCenter()):a.xy;this.pinchOrigin=b;this.currentCenter=b},pinchMove:function(b,h){var g=h.scale;var f=this.map.layerContainerOriginPx;var d=this.pinchOrigin;var e=(this.preserveCenter)?this.map.getPixelFromLonLat(this.map.getCenter()):b.xy;var c=Math.round((f.x+e.x-d.x)+(g-1)*(f.x-d.x));var a=Math.round((f.y+e.y-d.y)+(g-1)*(f.y-d.y));this.map.applyTransform(c,a,g);this.currentCenter=e},pinchDone:function(b,h,g){this.map.applyTransform();var f=this.map.getZoomForResolution(this.map.getResolution()/g.scale,true);if(f!==this.map.getZoom()||!this.currentCenter.equals(this.pinchOrigin)){var d=this.map.getResolutionForZoom(f);var a=this.map.getLonLatFromPixel(this.pinchOrigin);var c=this.currentCenter;var e=this.map.getSize();a.lon+=d*((e.w/2)-c.x);a.lat-=d*((e.h/2)-c.y);this.map.div.clientWidth=this.map.div.clientWidth;this.map.setCenter(a,f)}},CLASS_NAME:"OpenLayers.Control.PinchZoom"});