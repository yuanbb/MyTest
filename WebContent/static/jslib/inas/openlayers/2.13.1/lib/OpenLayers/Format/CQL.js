OpenLayers.Format.CQL=(function(){var k=["PROPERTY","COMPARISON","VALUE","LOGICAL"],e={PROPERTY:/^[_a-zA-Z]\w*/,COMPARISON:/^(=|<>|<=|<|>=|>|LIKE)/i,IS_NULL:/^IS NULL/i,COMMA:/^,/,LOGICAL:/^(AND|OR)/i,VALUE:/^('([^']|'')*'|\d+(\.\d*)?|\.\d+)/,LPAREN:/^\(/,RPAREN:/^\)/,SPATIAL:/^(BBOX|INTERSECTS|DWITHIN|WITHIN|CONTAINS)/i,NOT:/^NOT/i,BETWEEN:/^BETWEEN/i,GEOMETRY:function(r){var p=/^(POINT|LINESTRING|POLYGON|MULTIPOINT|MULTILINESTRING|MULTIPOLYGON|GEOMETRYCOLLECTION)/.exec(r);if(p){var o=r.length;var i=r.indexOf("(",p[0].length);if(i>-1){var q=1;while(i<o&&q>0){i++;switch(r.charAt(i)){case"(":q++;break;case")":q--;break;default:}}}return[r.substr(0,i+1)]}},END:/^$/},j={LPAREN:["GEOMETRY","SPATIAL","PROPERTY","VALUE","LPAREN"],RPAREN:["NOT","LOGICAL","END","RPAREN"],PROPERTY:["COMPARISON","BETWEEN","COMMA","IS_NULL"],BETWEEN:["VALUE"],IS_NULL:["END"],COMPARISON:["VALUE"],COMMA:["GEOMETRY","VALUE","PROPERTY"],VALUE:["LOGICAL","COMMA","RPAREN","END"],SPATIAL:["LPAREN"],LOGICAL:["NOT","VALUE","SPATIAL","PROPERTY","LPAREN"],NOT:["PROPERTY","LPAREN"],GEOMETRY:["COMMA","RPAREN"]},g={"=":OpenLayers.Filter.Comparison.EQUAL_TO,"<>":OpenLayers.Filter.Comparison.NOT_EQUAL_TO,"<":OpenLayers.Filter.Comparison.LESS_THAN,"<=":OpenLayers.Filter.Comparison.LESS_THAN_OR_EQUAL_TO,">":OpenLayers.Filter.Comparison.GREATER_THAN,">=":OpenLayers.Filter.Comparison.GREATER_THAN_OR_EQUAL_TO,LIKE:OpenLayers.Filter.Comparison.LIKE,BETWEEN:OpenLayers.Filter.Comparison.BETWEEN,"IS NULL":OpenLayers.Filter.Comparison.IS_NULL},d={},n={AND:OpenLayers.Filter.Logical.AND,OR:OpenLayers.Filter.Logical.OR},b={},a={RPAREN:3,LOGICAL:2,COMPARISON:1};var h;for(h in g){if(g.hasOwnProperty(h)){d[g[h]]=h}}for(h in n){if(n.hasOwnProperty(h)){b[n[h]]=h}}function c(o,i){if(i instanceof RegExp){return i.exec(o)}else{return i(o)}}function f(x,v){var q,p,u=v.length;for(q=0;q<u;q++){p=v[q];var t=e[p];var r=c(x,t);if(r){var s=r[0];var w=x.substr(s.length).replace(/^\s*/,"");return{type:p,text:s,remainder:w}}}var o="ERROR: In parsing: ["+x+"], expected one of: ";for(q=0;q<u;q++){p=v[q];o+="\n    "+p+": "+e[p]}throw new Error(o)}function m(q){var o=[];var i,p=["NOT","GEOMETRY","SPATIAL","PROPERTY","LPAREN"];do{i=f(q,p);q=i.remainder;p=j[i.type];if(i.type!="END"&&!p){throw new Error("No follows list for "+i.type)}o.push(i)}while(i.type!="END");return o}function l(u){var t=[],v=[];while(u.length){var w=u.shift();switch(w.type){case"PROPERTY":case"GEOMETRY":case"VALUE":v.push(w);break;case"COMPARISON":case"BETWEEN":case"IS_NULL":case"LOGICAL":var o=a[w.type];while(t.length>0&&(a[t[t.length-1].type]<=o)){v.push(t.pop())}t.push(w);break;case"SPATIAL":case"NOT":case"LPAREN":t.push(w);break;case"RPAREN":while(t.length>0&&(t[t.length-1].type!="LPAREN")){v.push(t.pop())}t.pop();if(t.length>0&&t[t.length-1].type=="SPATIAL"){v.push(t.pop())}case"COMMA":case"END":break;default:throw new Error("Unknown token type "+w.type)}}while(t.length>0){v.push(t.pop())}function q(){var K=v.pop();switch(K.type){case"LOGICAL":var C=q(),y=q();return new OpenLayers.Filter.Logical({filters:[y,C],type:n[K.text.toUpperCase()]});case"NOT":var B=q();return new OpenLayers.Filter.Logical({filters:[B],type:OpenLayers.Filter.Logical.NOT});case"BETWEEN":var z,F,I;v.pop();F=q();z=q();I=q();return new OpenLayers.Filter.Comparison({property:I,lowerBoundary:z,upperBoundary:F,type:OpenLayers.Filter.Comparison.BETWEEN});case"COMPARISON":var G=q(),I=q();return new OpenLayers.Filter.Comparison({property:I,value:G,type:g[K.text.toUpperCase()]});case"IS_NULL":var I=q();return new OpenLayers.Filter.Comparison({property:I,type:g[K.text.toUpperCase()]});case"VALUE":var A=K.text.match(/^'(.*)'$/);if(A){return A[1].replace(/''/g,"'")}else{return Number(K.text)}case"SPATIAL":switch(K.text.toUpperCase()){case"BBOX":var D=q(),E=q(),H=q(),J=q(),p=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.BBOX,property:p,value:OpenLayers.Bounds.fromArray([J,H,E,D])});case"INTERSECTS":var G=q(),I=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.INTERSECTS,property:I,value:G});case"WITHIN":var G=q(),I=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.WITHIN,property:I,value:G});case"CONTAINS":var G=q(),I=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.CONTAINS,property:I,value:G});case"DWITHIN":var i=q(),G=q(),I=q();return new OpenLayers.Filter.Spatial({type:OpenLayers.Filter.Spatial.DWITHIN,value:G,property:I,distance:Number(i)})}case"GEOMETRY":return OpenLayers.Geometry.fromWKT(K.text);default:return K.text}}var x=q();if(v.length>0){var r="Remaining tokens after building AST: \n";for(var s=v.length-1;s>=0;s--){r+=v[s].type+": "+v[s].text+"\n"}throw new Error(r)}return x}return OpenLayers.Class(OpenLayers.Format,{read:function(o){var i=l(m(o));if(this.keepData){this.data=i}return i},write:function(q){if(q instanceof OpenLayers.Geometry){return q.toString()}switch(q.CLASS_NAME){case"OpenLayers.Filter.Spatial":switch(q.type){case OpenLayers.Filter.Spatial.BBOX:return"BBOX("+q.property+","+q.value.toBBOX()+")";case OpenLayers.Filter.Spatial.DWITHIN:return"DWITHIN("+q.property+", "+this.write(q.value)+", "+q.distance+")";case OpenLayers.Filter.Spatial.WITHIN:return"WITHIN("+q.property+", "+this.write(q.value)+")";case OpenLayers.Filter.Spatial.INTERSECTS:return"INTERSECTS("+q.property+", "+this.write(q.value)+")";case OpenLayers.Filter.Spatial.CONTAINS:return"CONTAINS("+q.property+", "+this.write(q.value)+")";default:throw new Error("Unknown spatial filter type: "+q.type)}case"OpenLayers.Filter.Logical":if(q.type==OpenLayers.Filter.Logical.NOT){return"NOT ("+this.write(q.filters[0])+")"}else{var p="(";var r=true;for(var o=0;o<q.filters.length;o++){if(r){r=false}else{p+=") "+b[q.type]+" ("}p+=this.write(q.filters[o])}return p+")"}case"OpenLayers.Filter.Comparison":if(q.type==OpenLayers.Filter.Comparison.BETWEEN){return q.property+" BETWEEN "+this.write(q.lowerBoundary)+" AND "+this.write(q.upperBoundary)}else{return(q.value!==null)?q.property+" "+d[q.type]+" "+this.write(q.value):q.property+" "+d[q.type]}case undefined:if(typeof q==="string"){return"'"+q.replace(/'/g,"''")+"'"}else{if(typeof q==="number"){return String(q)}}default:throw new Error("Can't encode: "+q.CLASS_NAME+" "+q)}},CLASS_NAME:"OpenLayers.Format.CQL"})})();